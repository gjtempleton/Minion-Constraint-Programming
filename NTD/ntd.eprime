language ESSENCE' 1.0


given dMin : int
given dMax : int
given s : int
given d : int

letting rollMatrix : matrix indexed by [int(1..s), int(1..s), int(1..d)] of int(dMin..dMax) = [[[1,1,1], [0,0,1], [0,0,1]],[[0,1,1],[0,1,1],[0,0,1]],[[1,1,1],[0,1,1],[0,0,0]]]                                    
find dice : matrix indexed by [int(1..s), int(1..d)] of int(dMin..dMax)
$find rollMatrix : matrix indexed by [int(1..s), int(1..s), int(1..d)] of int(0,1)

such that
	dice[1,1]!=dice[1,2],
	dice[1,2]!=dice[1,3],
	dice[1,1]!=dice[1,3],
	dice[2,1]!=dice[2,2],
	dice[2,1]!=dice[2,3],
	dice[2,3]!=dice[2,2],
	dice[3,1]!=dice[3,2],
	dice[3,1]!=dice[3,3],
	dice[3,3]!=dice[3,2],
		forAll x,y: s.
				forAll z: d.
					(dice[x,y]>dice[((x+1)%d),y]) ->
						rollMatrix[x,y,z]=1


						
						
$	such that       forAll x:d.
$					allDiff(dice[x]),
$			
$			forAll x,y: s.
$				forAll z: d.
					rollMatrix[x,y,z]=
					

$		  forAll i,j: d.
$		    (i = (j+1)%d) ->
$						((sum(rollMatrix[1..s,1..s,j])/s*s)>0.5)					
 

